version: '3'

silent: true

tasks:

  before-commit:
    desc: Run this before committing changes
    cmds:
      - cmd: cargo clean
      - cmd: rm Cargo.lock
      - cmd: cargo +stable build

  build-all:
    desc: Runs all build variants
    cmds:
      - task: build
      - task: build10
      - task: build11
      - task: build12
      - task: build13
      - task: build14
      - task: build-min
      - task: build-max

  build:
    desc: Builds the library in debug mode with all features
    cmds:
      - cmd: cargo +stable build --all-features

  build-v2:
    desc: Builds the library in debug mode version 2.*
    cmds:
      - cmd: cargo +stable build

  build10:
    desc: Builds the library in debug mode with default features
    cmds:
      - cmd: cargo +stable build

  build11:
    desc: Builds the library in debug mode with "cosmwasm_1_1" feature enabled
    cmds:
      - cmd: cargo +stable build --features cosmwasm_1_1

  build12:
    desc: Builds the library in debug mode with "cosmwasm_1_2" feature enabled
    cmds:
      - cmd: cargo +stable build --features cosmwasm_1_2

  build13:
    desc: Builds the library in debug mode with "cosmwasm_1_3" feature enabled
    cmds:
      - cmd: cargo +stable build --features cosmwasm_1_3

  build14:
    desc: Builds the library in debug mode with "cosmwasm_1_4" feature enabled
    cmds:
      - cmd: cargo +stable build --features cosmwasm_1_4

  build-min:
    desc: Circle CI equivalent of build_minimal job
    cmds:
      - cmd: rm Cargo.lock
      - cmd: cargo +nightly build -Zminimal-versions --all-features
      - cmd: rm Cargo.lock
      - cmd: cargo +stable build

  build-max:
    desc: Circle CI equivalent of build_maximal job
    cmds:
      - cmd: cargo build --locked --all-features

  clean:
    desc: Removes target artifacts
    cmds:
      - cmd: cargo clean

  clippy-all:
    desc: Runs all clippy variants
    cmds:
      - task: clippy
      - task: clippy10
      - task: clippy11
      - task: clippy12
      - task: clippy13
      - task: clippy14
      - task: clippy-rust-1-65

  clippy:
    desc: Runs clippy with all features
    cmds:
      - cmd: cargo +nightly clippy --all-targets --all-features

  clippy-v2:
    desc: Runs clippy with all features for version 2.*
    cmds:
      - cmd: cargo clippy --all-targets

  clippy-rust-1-65:
    desc: Runs clippy with all features and Rust version 1.65.0
    cmds:
      - cmd: cargo +1.65.0-x86_64-unknown-linux-gnu clippy --all-targets --all-features

  clippy10:
    desc: Runs clippy with default features
    cmds:
      - cmd: cargo +nightly clippy --all-targets

  clippy11:
    desc: Runs clippy with "cosmwasm_1_1" feature enabled
    cmds:
      - cmd: cargo +nightly clippy --all-targets --features cosmwasm_1_1

  clippy12:
    desc: Runs clippy with "cosmwasm_1_2" feature enabled
    cmds:
      - cmd: cargo +nightly clippy --all-targets --features cosmwasm_1_2

  clippy13:
    desc: Runs clippy with "cosmwasm_1_3" feature enabled
    cmds:
      - cmd: cargo +nightly clippy --all-targets --features cosmwasm_1_3

  clippy14:
    desc: Runs clippy with "cosmwasm_1_4" feature enabled
    cmds:
      - cmd: cargo +nightly clippy --all-targets --features cosmwasm_1_4

  cov:
    desc: Runs code coverage using grcov
    cmds:
      - cmd: ./coverage.sh

  tov:
    desc: Runs code coverage using tarpaulin
    cmds:
      - cmd: ./tarpaulage.sh

  doc:
    desc: Generates documentation with all features
    cmds:
      - cmd: cargo +stable doc --no-deps --all-features

  doc-open:
    desc: Generates documentation with all features and opens it in a browser
    cmds:
      - cmd: cargo +stable doc --no-deps --open --all-features

  doc-priv:
    desc: Generates documentation with private items and all features
    cmds:
      - cmd: cargo +stable doc --no-deps --document-private-items --all-features

  doc-priv-open:
    desc: Generates documentation with private items and all features and opens it in a browser
    cmds:
      - cmd: cargo +stable doc --no-deps --document-private-items --open --all-features

  fmt:
    desc: Formats the code
    cmds:
      - cmd: cargo fmt

  test-all:
    desc: Runs all test variants
    cmds:
      - task: test
      - task: test10
      - task: test11
      - task: test12
      - task: test13
      - task: test14
      - task: test-min
      - task: test-max

  test:
    desc: Runs all tests in debug mode with all features
    cmds:
      - cmd: cargo +stable test --all-features

  test-v2:
    desc: Runs all tests in debug mode version 2.*
    cmds:
      - cmd: cargo +stable test

  test10:
    desc: Runs all tests in debug mode with default features
    cmds:
      - cmd: cargo +stable test

  test11:
    desc: Runs all tests in debug mode with "cosmwasm_1_1" feature enabled
    cmds:
      - cmd: cargo +stable test --features cosmwasm_1_1

  test12:
    desc: Runs all tests in debug mode with "cosmwasm_1_2" feature enabled
    cmds:
      - cmd: cargo +stable test --features cosmwasm_1_2 -- --nocapture

  test13:
    desc: Runs all tests in debug mode with "cosmwasm_1_3" feature enabled
    cmds:
      - cmd: cargo +stable test --features cosmwasm_1_3

  test14:
    desc: Runs all tests in debug mode with "cosmwasm_1_4" feature enabled
    cmds:
      - cmd: cargo +stable test --features cosmwasm_1_4

  test-min:
    desc: Runs tests with minimal version
    cmds:
      - cmd: rm Cargo.lock
      - cmd: cargo +nightly test -Zminimal-versions --all-features
      - cmd: rm Cargo.lock
      - cmd: cargo +stable test

  test-max:
    desc: Runs tests with maximal versions
    cmds:
      - cmd: cargo test --locked --all-features
